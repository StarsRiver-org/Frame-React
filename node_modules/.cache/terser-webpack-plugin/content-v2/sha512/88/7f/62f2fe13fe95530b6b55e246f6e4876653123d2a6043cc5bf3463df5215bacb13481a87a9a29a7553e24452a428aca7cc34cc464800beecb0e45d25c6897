{"map":"{\"version\":3,\"sources\":[\"G:\\\\WebDesigne\\\\APMServer\\\\web\\\\[SR] react.starscdn\\\\src\\\\serviceWorker.js\",\"G:\\\\WebDesigne\\\\APMServer\\\\web\\\\[SR] react.starscdn\\\\src\\\\components\\\\form\\\\main.js\",\"G:\\\\WebDesigne\\\\APMServer\\\\web\\\\[SR] react.starscdn\\\\src\\\\index.js\"],\"names\":[\"isLocalhost\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"registerValidSW\",\"swUrl\",\"config\",\"navigator\",\"serviceWorker\",\"register\",\"then\",\"registration\",\"onupdatefound\",\"installingWorker\",\"installing\",\"onstatechange\",\"state\",\"controller\",\"console\",\"log\",\"onUpdate\",\"onSuccess\",\"catch\",\"error\",\"Maketextarea\",\"props\",\"data\",\"react_default\",\"a\",\"createElement\",\"name\",\"placeholder\",\"default\",\"defaultValue\",\"value\",\"Makeinput\",\"type\",\"Makeselect\",\"order\",\"opts\",\"map\",\"op\",\"key\",\"disabled\",\"disable\",\"desc\",\"Form\",\"Mid\",\"this\",\"forminit\",\"className\",\"class\",\"method\",\"action\",\"target\",\"token\",\"hash\",\"Makeitem\",\"item\",\"inputs\",\"Component\",\"URL\",\"process\",\"origin\",\"addEventListener\",\"concat\",\"fetch\",\"response\",\"status\",\"headers\",\"get\",\"indexOf\",\"ready\",\"unregister\",\"reload\",\"checkValidServiceWorker\",\"ReactDOM\",\"render\",\"main_Form\",\"id\",\"document\",\"getElementById\"],\"mappings\":\"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\",\"sourcesContent\":[\"// In production, we register a service worker to serve assets from local cache.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on the \\\"N+1\\\" visit to a page, since previously\\n// cached resources are updated in the background.\\n\\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\\n// This link also includes instructions on opting out of this behavior.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\\n          );\\n        });\\n      } else {\\n        // Is not local host. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the old content will have been purged and\\n              // the fresh content will have been added to the cache.\\n              // It's the perfect time to display a \\\"New content is\\n              // available; please refresh.\\\" message in your web app.\\n              console.log('New content is available; please refresh.');\\n\\n              // Execute callback\\n              if (config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get('content-type').indexOf('javascript') === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        '网络未连接，离线模式启动'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React, {Component} from 'react';\\r\\nimport './main.scss';\\r\\n\\r\\n/* Define the contents of a form ,you need the follow data\\r\\n\\r\\nconst forminit = {\\r\\n    id: '',\\r\\n    class: 'classname',\\r\\n    method: 'get / post',\\r\\n    action: '//',\\r\\n    target: '_blank',\\r\\n    token: '',\\r\\n    hash: 'hash',\\r\\n    inputs: [\\r\\n        {name: 'name', value: '', default: '请输入姓名'},\\r\\n        {name: 'work', type: 'textarea', value: '2018'},\\r\\n        {\\r\\n            name: 'select',\\r\\n            type: 'select',\\r\\n            default: '2',\\r\\n            opts: [\\r\\n                {desc: '0', disable: true},\\r\\n                {desc: '1', value: '1'},\\r\\n                {desc: '2', value: '2'},\\r\\n            ],\\r\\n        },\\r\\n    ],\\r\\n};\\r\\n\\r\\n*/\\r\\n\\r\\nfunction Maketextarea(props) {\\r\\n    let data = props.data;\\r\\n    return (\\r\\n        <textarea name={data.name} placeholder={data.default} defaultValue={data.value} >\\r\\n        </textarea >\\r\\n    );\\r\\n}\\r\\n\\r\\nfunction Makeinput(props) {\\r\\n    let data = props.data;\\r\\n    return (\\r\\n        <input type={data.type && 'text'} name={data.name} defaultValue={data.value} placeholder={data.default} />\\r\\n    );\\r\\n}\\r\\n\\r\\nfunction Makeselect(props) {\\r\\n    let order = 0;\\r\\n    let data = props.data;\\r\\n    return (\\r\\n        <select name={data.name} defaultValue={data.default} >\\r\\n            {data.opts.map((op) => <option key={order++} disabled={op.disable && /disabled/} value={op.value} >{op.desc}</option >)}\\r\\n        </select >\\r\\n    );\\r\\n}\\r\\n\\r\\nexport default class Form extends Component {\\r\\n\\r\\n    render() {\\r\\n\\r\\n        function Makeform(props) {\\r\\n\\r\\n            let Makeitem = function (props) {\\r\\n                let data = props.data;\\r\\n                if (data.type === 'textarea') {\\r\\n                    return <Maketextarea data={data} />;\\r\\n                } else if (data.type === 'sec') {\\r\\n\\r\\n                } else if (data.type === 'select') {\\r\\n                    return <Makeselect data={data} />;\\r\\n                } else {\\r\\n                    return <Makeinput data={data} />;\\r\\n                }\\r\\n            };\\r\\n\\r\\n            let\\r\\n                order = 0,\\r\\n                arr = props.data\\r\\n            ;\\r\\n            return arr.map((item) => <Makeitem key={order++} data={item} />);\\r\\n        }\\r\\n\\r\\n        const Mid = this.props.forminit;\\r\\n\\r\\n        return (\\r\\n            <form className={Mid.class} method={Mid.method} action={Mid.action} target={Mid.target}>\\r\\n                <input name=\\\"token\\\" type=\\\"hidden\\\" value={Mid.token} />\\r\\n                <input name=\\\"hash\\\" type=\\\"hidden\\\" value={Mid.hash} />\\r\\n                <Makeform data={Mid.inputs} />\\r\\n            </form >\\r\\n        );\\r\\n    }\\r\\n}\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport * as serviceWorker from './serviceWorker';\\nimport Form from './components/form/main';\\n\\nserviceWorker.register();\\n\\nconst forminit = {\\n    id: '',\\n    class: 'classname',\\n    method: 'get / post',\\n    action: '//',\\n    target: '_blank',\\n    token: '',\\n    hash: 'hash',\\n    inputs: [\\n        {name: 'name', value: '', default: '请输入姓名'},\\n        {name: 'work', type: 'textarea', value: '2018'},\\n        {\\n            name: 'select',\\n            type: 'select',\\n            default: '2',\\n            opts: [\\n                {desc: '0', disable: true},\\n                {desc: '1', value: '1'},\\n                {desc: '2', value: '2'},\\n            ],\\n        },\\n    ],\\n};\\n\\nReactDOM.render(<Form forminit={forminit} />, document.getElementById('app'));\\n\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{14:function(e,t,a){},16:function(e,t,a){\"use strict\";a.r(t);var n=a(0),o=a.n(n),r=a(3),i=a.n(r),c=Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function s(e,t){navigator.serviceWorker.register(e).then(function(e){e.onupdatefound=function(){var a=e.installing;a.onstatechange=function(){\"installed\"===a.state&&(navigator.serviceWorker.controller?(console.log(\"New content is available; please refresh.\"),t.onUpdate&&t.onUpdate(e)):(console.log(\"Content is cached for offline use.\"),t.onSuccess&&t.onSuccess(e)))}}}).catch(function(e){console.error(\"Error during service worker registration:\",e)})}var l=a(4),u=a(5),d=a(7),f=a(6),v=a(8);a(14);function p(e){var t=e.data;return o.a.createElement(\"textarea\",{name:t.name,placeholder:t.default,defaultValue:t.value})}function m(e){var t=e.data;return o.a.createElement(\"input\",{type:t.type&&\"text\",name:t.name,defaultValue:t.value,placeholder:t.default})}function h(e){var t=0,a=e.data;return o.a.createElement(\"select\",{name:a.name,defaultValue:a.default},a.opts.map(function(e){return o.a.createElement(\"option\",{key:t++,disabled:e.disable&&/disabled/,value:e.value},e.desc)}))}var g=function(e){function t(){return Object(l.a)(this,t),Object(d.a)(this,Object(f.a)(t).apply(this,arguments))}return Object(v.a)(t,e),Object(u.a)(t,[{key:\"render\",value:function(){var e=this.props.forminit;return o.a.createElement(\"form\",{className:e.class,method:e.method,action:e.action,target:e.target},o.a.createElement(\"input\",{name:\"token\",type:\"hidden\",value:e.token}),o.a.createElement(\"input\",{name:\"hash\",type:\"hidden\",value:e.hash}),o.a.createElement(function(e){var t=function(e){var t=e.data;return\"textarea\"===t.type?o.a.createElement(p,{data:t}):\"sec\"!==t.type?\"select\"===t.type?o.a.createElement(h,{data:t}):o.a.createElement(m,{data:t}):void 0},a=0;return e.data.map(function(e){return o.a.createElement(t,{key:a++,data:e})})},{data:e.inputs}))}}]),t}(n.Component);!function(e){if(\"serviceWorker\"in navigator){if(new URL(\"\",window.location).origin!==window.location.origin)return;window.addEventListener(\"load\",function(){var t=\"\".concat(\"\",\"/service-worker.js\");c?(function(e,t){fetch(e).then(function(a){404===a.status||-1===a.headers.get(\"content-type\").indexOf(\"javascript\")?navigator.serviceWorker.ready.then(function(e){e.unregister().then(function(){window.location.reload()})}):s(e,t)}).catch(function(){console.log(\"\\u7f51\\u7edc\\u672a\\u8fde\\u63a5\\uff0c\\u79bb\\u7ebf\\u6a21\\u5f0f\\u542f\\u52a8\")})}(t,e),navigator.serviceWorker.ready.then(function(){console.log(\"This web app is being served cache-first by a service worker. To learn more, visit https://goo.gl/SC7cgQ\")})):s(t,e)})}}();i.a.render(o.a.createElement(g,{forminit:{id:\"\",class:\"classname\",method:\"get / post\",action:\"//\",target:\"_blank\",token:\"\",hash:\"hash\",inputs:[{name:\"name\",value:\"\",default:\"\\u8bf7\\u8f93\\u5165\\u59d3\\u540d\"},{name:\"work\",type:\"textarea\",value:\"2018\"},{name:\"select\",type:\"select\",default:\"2\",opts:[{desc:\"0\",disable:!0},{desc:\"1\",value:\"1\"},{desc:\"2\",value:\"2\"}]}]}}),document.getElementById(\"app\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},9:function(e,t,a){e.exports=a(16)}},[[9,2,1]]]);","extractedComments":[]}