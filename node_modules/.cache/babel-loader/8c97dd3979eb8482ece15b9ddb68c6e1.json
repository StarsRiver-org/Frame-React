{"ast":null,"code":"import _classCallCheck from \"G:\\\\WebDesigne\\\\APMServer\\\\web\\\\[SR] react.starscdn\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"G:\\\\WebDesigne\\\\APMServer\\\\web\\\\[SR] react.starscdn\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"G:\\\\WebDesigne\\\\APMServer\\\\web\\\\[SR] react.starscdn\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"G:\\\\WebDesigne\\\\APMServer\\\\web\\\\[SR] react.starscdn\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"G:\\\\WebDesigne\\\\APMServer\\\\web\\\\[SR] react.starscdn\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"G:\\\\WebDesigne\\\\APMServer\\\\web\\\\[SR] react.starscdn\\\\src\\\\template\\\\form\\\\main.js\";\nimport React, { Component } from 'react';\nimport './main.scss';\n\nvar Form =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Form, _Component);\n\n  function Form() {\n    _classCallCheck(this, Form);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Form).apply(this, arguments));\n  }\n\n  _createClass(Form, [{\n    key: \"render\",\n    value: function render() {\n      function Maketextarea(props) {\n        return React.createElement(\"textarea\", {\n          name: props.name,\n          placeholder: props.default,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          },\n          __self: this\n        }, props.value);\n      }\n\n      function Makeinput(props) {\n        return React.createElement(\"input\", {\n          type: props.type && 'text',\n          name: props.name,\n          value: props.value,\n          placeholder: props.default,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        });\n      }\n\n      function Makeselecter(props) {\n        return React.createElement(\"select\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        });\n      }\n\n      function Makef(props) {\n        var html = [];\n        var arr = props.arr;\n\n        for (var i = 0; i < arr.length; i++) {\n          var data = arr[i];\n\n          if (data.type === 'textarea') {\n            html[i] = React.createElement(Maketextarea, {\n              name: data.name,\n              placeholder: data.default,\n              value: data.value,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 35\n              },\n              __self: this\n            });\n          } else if (data.type === 'sec') {\n            html[i] = '';\n          } else {\n            html[i] = React.createElement(Makeinput, {\n              name: data.name,\n              placeholder: data.default,\n              value: data.value,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 39\n              },\n              __self: this\n            });\n          }\n        }\n\n        return html;\n      }\n\n      var Mid = this.props.forminit;\n      return React.createElement(\"form\", {\n        className: Mid.class,\n        method: Mid.method,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"token\",\n        type: \"hidden\",\n        value: Mid.token,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        name: \"hash\",\n        type: \"hidden\",\n        value: Mid.hash,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(Makef, {\n        arr: Mid.inputs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Form;\n}(Component);\n\nexport { Form as default };","map":{"version":3,"sources":["G:\\WebDesigne\\APMServer\\web\\[SR] react.starscdn\\src\\template\\form\\main.js"],"names":["React","Component","Form","Maketextarea","props","name","default","value","Makeinput","type","Makeselecter","Makef","html","arr","i","length","data","Mid","forminit","class","method","token","hash","inputs"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,aAAP;;IAEqBC,I;;;;;;;;;;;;;6BAER;AAEL,eAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,eACI;AAAU,UAAA,IAAI,EAAEA,KAAK,CAACC,IAAtB;AAA4B,UAAA,WAAW,EAAED,KAAK,CAACE,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0DF,KAAK,CAACG,KAAhE,CADJ;AAGH;;AAED,eAASC,SAAT,CAAmBJ,KAAnB,EAA0B;AACtB,eACI;AAAO,UAAA,IAAI,EAAEA,KAAK,CAACK,IAAN,IAAc,MAA3B;AAAmC,UAAA,IAAI,EAAEL,KAAK,CAACC,IAA/C;AAAqD,UAAA,KAAK,EAAED,KAAK,CAACG,KAAlE;AAAyE,UAAA,WAAW,EAAEH,KAAK,CAACE,OAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;AAED,eAASI,YAAT,CAAsBN,KAAtB,EAA6B;AACzB,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;AAGD,eAASO,KAAT,CAAeP,KAAf,EAAsB;AAClB,YAAIQ,IAAI,GAAG,EAAX;AACA,YAAIC,GAAG,GAAGT,KAAK,CAACS,GAAhB;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAAG,CAACE,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACjC,cAAIE,IAAI,GAAGH,GAAG,CAACC,CAAD,CAAd;;AACA,cAAIE,IAAI,CAACP,IAAL,KAAc,UAAlB,EAA8B;AAC1BG,YAAAA,IAAI,CAACE,CAAD,CAAJ,GAAU,oBAAC,YAAD;AAAc,cAAA,IAAI,EAAEE,IAAI,CAACX,IAAzB;AAA+B,cAAA,WAAW,EAAEW,IAAI,CAACV,OAAjD;AAA0D,cAAA,KAAK,EAAEU,IAAI,CAACT,KAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAV;AACH,WAFD,MAEO,IAAIS,IAAI,CAACP,IAAL,KAAc,KAAlB,EAAyB;AAC5BG,YAAAA,IAAI,CAACE,CAAD,CAAJ,GAAU,EAAV;AACH,WAFM,MAEA;AACHF,YAAAA,IAAI,CAACE,CAAD,CAAJ,GAAU,oBAAC,SAAD;AAAW,cAAA,IAAI,EAAEE,IAAI,CAACX,IAAtB;AAA4B,cAAA,WAAW,EAAEW,IAAI,CAACV,OAA9C;AAAuD,cAAA,KAAK,EAAEU,IAAI,CAACT,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAV;AACH;AACJ;;AAED,eAAOK,IAAP;AACH;;AAED,UAAMK,GAAG,GAAG,KAAKb,KAAL,CAAWc,QAAvB;AAEA,aACI;AAAM,QAAA,SAAS,EAAED,GAAG,CAACE,KAArB;AAA4B,QAAA,MAAM,EAAEF,GAAG,CAACG,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,IAAI,EAAC,QAAzB;AAAkC,QAAA,KAAK,EAAEH,GAAG,CAACI,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,QAAxB;AAAiC,QAAA,KAAK,EAAEJ,GAAG,CAACK,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAEL,GAAG,CAACM,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ;AAOH;;;;EAnD6BtB,S;;SAAbC,I","sourcesContent":["import React, {Component} from 'react';\r\nimport './main.scss';\r\n\r\nexport default class Form extends Component {\r\n\r\n    render() {\r\n\r\n        function Maketextarea(props) {\r\n            return (\r\n                <textarea name={props.name} placeholder={props.default} >{props.value}</textarea >\r\n            );\r\n        }\r\n\r\n        function Makeinput(props) {\r\n            return (\r\n                <input type={props.type && 'text'} name={props.name} value={props.value} placeholder={props.default} />\r\n            );\r\n        }\r\n\r\n        function Makeselecter(props) {\r\n            return (\r\n                <select>\r\n\r\n                </select>\r\n            );\r\n        }\r\n\r\n\r\n        function Makef(props) {\r\n            let html = [];\r\n            let arr = props.arr;\r\n            for (let i = 0; i < arr.length; i++) {\r\n                let data = arr[i];\r\n                if (data.type === 'textarea') {\r\n                    html[i] = <Maketextarea name={data.name} placeholder={data.default} value={data.value} />;\r\n                } else if (data.type === 'sec') {\r\n                    html[i] = '';\r\n                } else {\r\n                    html[i] = <Makeinput name={data.name} placeholder={data.default} value={data.value} />;\r\n                }\r\n            }\r\n\r\n            return html;\r\n        }\r\n\r\n        const Mid = this.props.forminit;\r\n\r\n        return (\r\n            <form className={Mid.class} method={Mid.method} >\r\n                <input name=\"token\" type=\"hidden\" value={Mid.token} />\r\n                <input name=\"hash\" type=\"hidden\" value={Mid.hash} />\r\n                <Makef arr={Mid.inputs} />\r\n            </form >\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}