{"ast":null,"code":"/***************\\\r\n  config loading\r\n\\***************/\nimport Config from './config/config';\n/***************\\\r\n  lang loading\r\n\\***************/\n\nimport zh_cn from './i18n/zh_cn';\nimport zh_tw from './i18n/zh_tw';\nimport de from './i18n/de';\nimport en from './i18n/en';\nimport fr from './i18n/fr';\nimport jp from './i18n/jp';\nvar Langs = {\n  'zh_cn': zh_cn,\n  'zh_tw': zh_tw,\n  'de': de,\n  'en': en,\n  'fr': fr,\n  'jp': jp\n},\n    Lang = Langs[Storage.lang ? Storage.lang : Config.lang];\n/***************\\\r\n calc length GBK\r\n\\***************/\n\nfunction strlen(val) {\n  if (!val) {\n    return 0;\n  }\n\n  var len = 0;\n\n  for (var i = 0; i < val.length; i++) {\n    var a = val.charAt(i);\n\n    if (a.match('/[^\\x00-\\xff]/ig') != null) {\n      len += 2;\n    } else {\n      len += 1;\n    }\n  }\n\n  return len;\n}\n/***************\\\r\n calc length GBK\r\n\\***************/\n\n\nfunction substr(str, length) {\n  var start = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!str) {\n    return '';\n  }\n\n  var len = 0;\n\n  for (var i = 0; i < val.length; i++) {\n    var a = val.charAt(i);\n\n    if (a.match('/[^\\x00-\\xff]/ig') != null) {\n      len += 2;\n    } else {\n      len += 1;\n    }\n  }\n\n  return len;\n}\n/***************\\\r\n create rand str\r\n\\***************/\n\n\nfunction rand(length, type) {\n  var num = '0123456789',\n      letM = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\n      letm = 'abcdefghijklmnopqrstuvwxyz';\n  var arr = [],\n      str = '';\n\n  if (type === 'num') {\n    arr = num;\n  } else if (type === 'letter') {\n    arr = letM;\n  } else if (type === 'mixm') {\n    arr = num + letm;\n  } else if (type === 'mixM') {\n    arr = num + letM;\n  } else {\n    arr = num + letm + letM;\n  }\n\n  for (var i = 0; i < length; i++) {\n    str += arr[Math.round(Math.random() * (arr.length - 1))];\n  }\n\n  return str;\n}\n/***************\\\r\n      Output\r\n\\***************/\n\n\nexport { Config, // 配置文件\nLang, // 获取语言字符串函数\nLangs, // 获取语言\nrand, //随机字符串生成\nstrlen, //计算字符串长度（GBK）\nsubstr };","map":{"version":3,"sources":["G:\\WebDesigne\\APMServer\\web\\[SR] react.starscdn\\src\\helper.js"],"names":["Config","zh_cn","zh_tw","de","en","fr","jp","Langs","Lang","Storage","lang","strlen","val","len","i","length","a","charAt","match","substr","str","start","rand","type","num","letM","letm","arr","Math","round","random"],"mappings":"AAAA;;;AAGA,OAAOA,MAAP,MAAmB,iBAAnB;AAEA;;;;AAGA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,EAAP,MAAe,WAAf;AACA,OAAOC,EAAP,MAAe,WAAf;AACA,OAAOC,EAAP,MAAe,WAAf;AACA,OAAOC,EAAP,MAAe,WAAf;AACA,IACIC,KAAK,GAAG;AACJ,WAASN,KADL;AAEJ,WAASC,KAFL;AAGJ,QAAMC,EAHF;AAIJ,QAAMC,EAJF;AAKJ,QAAMC,EALF;AAMJ,QAAMC;AANF,CADZ;AAAA,IASIE,IAAI,GAAGD,KAAK,CAACE,OAAO,CAACC,IAAR,GAAeD,OAAO,CAACC,IAAvB,GAA8BV,MAAM,CAACU,IAAtC,CAThB;AAYA;;;;AAGA,SAASC,MAAT,CAAgBC,GAAhB,EAAqB;AACjB,MAAG,CAACA,GAAJ,EAAQ;AACJ,WAAO,CAAP;AACH;;AACD,MAAIC,GAAG,GAAG,CAAV;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,CAACG,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACjC,QAAIE,CAAC,GAAGJ,GAAG,CAACK,MAAJ,CAAWH,CAAX,CAAR;;AACA,QAAIE,CAAC,CAACE,KAAF,CAAQ,kBAAR,KAA+B,IAAnC,EAAyC;AACrCL,MAAAA,GAAG,IAAI,CAAP;AACH,KAFD,MAGK;AACDA,MAAAA,GAAG,IAAI,CAAP;AACH;AACJ;;AACD,SAAOA,GAAP;AACH;AAED;;;;;AAGA,SAASM,MAAT,CAAgBC,GAAhB,EAAqBL,MAArB,EAAwC;AAAA,MAAXM,KAAW,uEAAH,CAAG;;AACpC,MAAG,CAACD,GAAJ,EAAQ;AACJ,WAAO,EAAP;AACH;;AACD,MAAIP,GAAG,GAAG,CAAV;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,CAACG,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACjC,QAAIE,CAAC,GAAGJ,GAAG,CAACK,MAAJ,CAAWH,CAAX,CAAR;;AACA,QAAIE,CAAC,CAACE,KAAF,CAAQ,kBAAR,KAA+B,IAAnC,EAAyC;AACrCL,MAAAA,GAAG,IAAI,CAAP;AACH,KAFD,MAGK;AACDA,MAAAA,GAAG,IAAI,CAAP;AACH;AACJ;;AACD,SAAOA,GAAP;AACH;AAED;;;;;AAIA,SAASS,IAAT,CAAcP,MAAd,EAAsBQ,IAAtB,EAA2B;AACvB,MAAMC,GAAG,GAAG,YAAZ;AAAA,MAA0BC,IAAI,GAAG,4BAAjC;AAAA,MAA+DC,IAAI,GAAG,4BAAtE;AAEA,MAAIC,GAAG,GAAG,EAAV;AAAA,MAAeP,GAAG,GAAG,EAArB;;AACA,MAAGG,IAAI,KAAK,KAAZ,EAAkB;AACdI,IAAAA,GAAG,GAAGH,GAAN;AACH,GAFD,MAEO,IAAGD,IAAI,KAAK,QAAZ,EAAqB;AAACI,IAAAA,GAAG,GAAGF,IAAN;AAC5B,GADM,MACA,IAAGF,IAAI,KAAK,MAAZ,EAAmB;AAACI,IAAAA,GAAG,GAAGH,GAAG,GAAGE,IAAZ;AAC1B,GADM,MACA,IAAGH,IAAI,KAAK,MAAZ,EAAmB;AAACI,IAAAA,GAAG,GAAGH,GAAG,GAAGC,IAAZ;AAC1B,GADM,MACA;AAACE,IAAAA,GAAG,GAAGH,GAAG,GAAGE,IAAN,GAAaD,IAAnB;AACP;;AACD,OAAI,IAAIX,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAGC,MAAjB,EAAyBD,CAAC,EAA1B,EAA6B;AACzBM,IAAAA,GAAG,IAAIO,GAAG,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,CAACZ,MAAJ,GAAW,CAA5B,CAAX,CAAD,CAAV;AACH;;AACD,SAAOK,GAAP;AACH;AAED;;;;;AAGA,SACIpB,MADJ,EACY;AACRQ,IAFJ,EAEY;AACRD,KAHJ,EAGY;AACRe,IAJJ,EAIY;AACRX,MALJ,EAKY;AACRQ,MANJ","sourcesContent":["/***************\\\r\n  config loading\r\n\\***************/\r\nimport Config from './config/config';\r\n\r\n/***************\\\r\n  lang loading\r\n\\***************/\r\nimport zh_cn from './i18n/zh_cn';\r\nimport zh_tw from './i18n/zh_tw';\r\nimport de from './i18n/de';\r\nimport en from './i18n/en';\r\nimport fr from './i18n/fr';\r\nimport jp from './i18n/jp';\r\nconst\r\n    Langs = {\r\n        'zh_cn': zh_cn,\r\n        'zh_tw': zh_tw,\r\n        'de': de,\r\n        'en': en,\r\n        'fr': fr,\r\n        'jp': jp,\r\n    },\r\n    Lang = Langs[Storage.lang ? Storage.lang : Config.lang]\r\n;\r\n\r\n/***************\\\r\n calc length GBK\r\n\\***************/\r\nfunction strlen(val) {\r\n    if(!val){\r\n        return 0;\r\n    }\r\n    let len = 0;\r\n    for (let i = 0; i < val.length; i++) {\r\n        var a = val.charAt(i);\r\n        if (a.match('/[^\\x00-\\xff]/ig') != null) {\r\n            len += 2;\r\n        }\r\n        else {\r\n            len += 1;\r\n        }\r\n    }\r\n    return len;\r\n}\r\n\r\n/***************\\\r\n calc length GBK\r\n\\***************/\r\nfunction substr(str, length, start = 0) {\r\n    if(!str){\r\n        return '';\r\n    }\r\n    let len = 0;\r\n    for (let i = 0; i < val.length; i++) {\r\n        var a = val.charAt(i);\r\n        if (a.match('/[^\\x00-\\xff]/ig') != null) {\r\n            len += 2;\r\n        }\r\n        else {\r\n            len += 1;\r\n        }\r\n    }\r\n    return len;\r\n}\r\n\r\n/***************\\\r\n create rand str\r\n\\***************/\r\n\r\nfunction rand(length, type){\r\n    const num = '0123456789', letM = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', letm = 'abcdefghijklmnopqrstuvwxyz';\r\n\r\n    let arr = [] , str = '';\r\n    if(type === 'num'){\r\n        arr = num;\r\n    } else if(type === 'letter'){arr = letM;\r\n    } else if(type === 'mixm'){arr = num + letm;\r\n    } else if(type === 'mixM'){arr = num + letM;\r\n    } else {arr = num + letm + letM;\r\n    }\r\n    for(let i=0; i < length; i++){\r\n        str += arr[Math.round(Math.random() * (arr.length-1))];\r\n    }\r\n    return str;\r\n}\r\n\r\n/***************\\\r\n      Output\r\n\\***************/\r\nexport {\r\n    Config, // 配置文件\r\n    Lang,   // 获取语言字符串函数\r\n    Langs,  // 获取语言\r\n    rand,   //随机字符串生成\r\n    strlen, //计算字符串长度（GBK）\r\n    substr, //截取字符串长度\r\n}"]},"metadata":{},"sourceType":"module"}