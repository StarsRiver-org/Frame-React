{"ast":null,"code":"/***************\\\r\n  config loading\r\n\\***************/\nimport Config from './config/config';\n/***************\\\r\n  lang loading\r\n\\***************/\n\nimport zh_cn from './i18n/zh_cn';\nimport zh_tw from './i18n/zh_tw';\nimport de from './i18n/de';\nimport en from './i18n/en';\nimport fr from './i18n/fr';\nimport jp from './i18n/jp';\nvar Langs = {\n  'zh_cn': zh_cn,\n  'zh_tw': zh_tw,\n  'de': de,\n  'en': en,\n  'fr': fr,\n  'jp': jp\n},\n    Lang = Langs[Storage.lang ? Storage.lang : Config.lang];\n/***************\\\r\n calc length GBK\r\n\\***************/\n\nfunction strlen(val) {\n  if (!val) {\n    return 0;\n  }\n\n  var len = 0;\n\n  for (var i = 0; i < val.length; i++) {\n    len += val.charAt(i).match('/[^\\x00-\\xff]/ig') != null ? 2 : 1;\n  }\n\n  return len;\n}\n/***************\\\r\n   cut the str\r\n\\***************/\n\n\nfunction substr(str, length) {\n  var start = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var res = '';\n\n  if (str) {\n    if (strlen(str) <= length) {\n      res = str;\n    } else {\n      var len = 1;\n\n      for (var i = start; i < str.length; i++) {\n        if (len <= length) {\n          res += str[i];\n          len += str.charAt(i).match(\"/[^\\x00-\\xff]/ig\") != null ? 2 : 1;\n        } else {\n          break;\n        }\n      }\n    }\n  }\n\n  return res;\n}\n/***************\\\r\n create rand str\r\n\\***************/\n\n\nfunction rand(length, type) {\n  var num = '0123456789',\n      letM = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\n      letm = 'abcdefghijklmnopqrstuvwxyz';\n  var arr = [],\n      str = '';\n\n  switch (type) {\n    case 'letter':\n      arr = letM;\n      break;\n\n    case 'mixm':\n      arr = num + letm;\n      break;\n\n    case 'mixM':\n      arr = num + letM;\n      break;\n\n    default:\n      arr = num + letm + letM;\n  }\n\n  for (var i = 0; i < length; i++) {\n    str += arr[Math.round(Math.random() * (arr.length - 1))];\n  }\n\n  return str;\n}\n/***************\\\r\n      Output\r\n\\***************/\n\n\nexport { Config, // 配置文件\nLang, // 获取语言字符串函数\nLangs, // 获取语言\nrand, //随机字符串生成\nstrlen, //计算字符串长度（GBK）\nsubstr };","map":{"version":3,"sources":["G:\\WebDesigne\\APMServer\\web\\[SR] react.starscdn\\src\\helper.js"],"names":["Config","zh_cn","zh_tw","de","en","fr","jp","Langs","Lang","Storage","lang","strlen","val","len","i","length","charAt","match","substr","str","start","res","rand","type","num","letM","letm","arr","Math","round","random"],"mappings":"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","sourcesContent":["/***************\\\r\n  config loading\r\n\\***************/\r\nimport Config from './config/config';\r\n\r\n/***************\\\r\n  lang loading\r\n\\***************/\r\nimport zh_cn from './i18n/zh_cn';\r\nimport zh_tw from './i18n/zh_tw';\r\nimport de from './i18n/de';\r\nimport en from './i18n/en';\r\nimport fr from './i18n/fr';\r\nimport jp from './i18n/jp';\r\nconst\r\n    Langs = {\r\n        'zh_cn': zh_cn,\r\n        'zh_tw': zh_tw,\r\n        'de': de,\r\n        'en': en,\r\n        'fr': fr,\r\n        'jp': jp,\r\n    },\r\n    Lang = Langs[Storage.lang ? Storage.lang : Config.lang]\r\n;\r\n\r\n/***************\\\r\n calc length GBK\r\n\\***************/\r\nfunction strlen(val) {\r\n    if(!val){\r\n        return 0;\r\n    }\r\n    let len = 0;\r\n    for (let i = 0; i < val.length; i++) {\r\n        len += val.charAt(i).match('/[^\\x00-\\xff]/ig') != null ? 2 : 1;\r\n    }\r\n    return len;\r\n}\r\n\r\n/***************\\\r\n   cut the str\r\n\\***************/\r\nfunction substr(str, length, start = 0) {\r\n    let res = '';\r\n\r\n    if(str){\r\n        if (strlen(str) <= length){\r\n            res = str;\r\n        } else {\r\n            let len = 1;\r\n            for (let i = start; i < str.length; i++) {\r\n                if(len <= length){\r\n                    res += str[i];\r\n                    len += (str.charAt(i).match(\"/[^\\x00-\\xff]/ig\") != null) ? 2 : 1;\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return res;\r\n}\r\n\r\n/***************\\\r\n create rand str\r\n\\***************/\r\n\r\nfunction rand(length, type){\r\n    const num = '0123456789', letM = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', letm = 'abcdefghijklmnopqrstuvwxyz';\r\n\r\n    let arr = [] , str = '';\r\n    switch (type) {\r\n        case 'letter': arr = letM; break;\r\n        case 'mixm': arr = num + letm; break;\r\n        case 'mixM': arr = num + letM; break;\r\n        default: arr = num + letm + letM;\r\n    }\r\n\r\n    for(let i=0; i < length; i++){\r\n        str += arr[Math.round(Math.random() * (arr.length-1))];\r\n    }\r\n    return str;\r\n}\r\n\r\n/***************\\\r\n      Output\r\n\\***************/\r\nexport {\r\n    Config, // 配置文件\r\n    Lang,   // 获取语言字符串函数\r\n    Langs,  // 获取语言\r\n    rand,   //随机字符串生成\r\n    strlen, //计算字符串长度（GBK）\r\n    substr, //截取字符串长度\r\n}"]},"metadata":{},"sourceType":"module"}